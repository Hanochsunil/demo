#include <stdio.h>

int i, size, front = -1, rear = -1;

struct pq {
    int item, priority;
} a[20];

void display() {
    if (front == -1) {
        printf("THE QUEUE IS EMPTY");
    } else {
        for (i = front; i <= rear; i++) {
            printf("%d ", a[i].item);
        }
    }
}

void enqueue(int number, int priority) {
    if (front == -1) {
        front = 0;
        rear = 0;
        a[rear].item = number;
        a[rear].priority = priority;
    } else if (front == 0 && rear == size - 1) {
        printf("THE QUEUE IS FULL");
    } else if (rear == size - 1) {
        for (i = 0; i <= rear; i++) {
            a[i - 1] = a[i];
            front = front - 1;
            rear = rear - 1;
        }
        for (i = rear; i >= front; i--) {
            if (a[i].priority < priority) {
                break;
            }
        }
        int loc = i + 1;
        for (i = rear; i >= loc; i--) {
            a[i + 1] = a[i];
        }
        a[loc].item = number;
        a[loc].priority = priority;
        rear++;
    } else {
        for (i = rear; i >= front; i--) {
            if (a[i].priority < priority) {
                break;
            }
        }
        int loc = i + 1;
        for (i = rear; i >= loc; i--) {
            a[i + 1] = a[i];
        }
        a[loc].item = number;
        a[loc].priority = priority;
        rear++;
    }
}

int main() {
    int choice, n, p;
    printf("ENTER THE SIZE OF THE ARRAY: ");
    scanf("%d", &size);
    printf("ENTER YOUR OPTIONS\n");
    printf("1-ENQUEUE\n2-DEQUEUE\n3-DISPLAY\n");
    scanf("%d", &choice);
    switch (choice) {
        case 1:
            printf("ENTER THE NUMBER AND PRIORITY OF THE NUMBER: ");
            scanf("%d%d", &n, &p);
            enqueue(n, p);
            break;
        case 2:
            // Implement the dequeue function
            break;
        case 3:
            display();
            break;
    }
    return 0;
}
